What I need to complete/do for assignment 1

classes
game_interface
    -finish the player's view
    -has
        -rules and overview of game
        -move prompting
        -shows if a move is legal
        -show what move the comp chose
        -if someone won

game_state
    -which player's turn it is
    -which legal moves are available
    -is the game over
    -must be a structure empty class

subclasses that extend game_state

stategy
    -finish the random strategy class


class game(player1's turn)
    attributes:
    current_state

    methods:
    get_instructions()
    is_over(current_state)
    str_to_mvoe
    is_winner

class current_state()
    attributes:

    methods:
    get_current_player_name()
    get_possible_moves()
    is_valid_move(move)
    make_move(move_to_make)

chopsticks
You'll implement chopstick, a game played as follows:
1. Each of two players begins with one nger pointed up on each of their hands.
2. Player A touches one hand to one of Player B's hands, increasing the number of ngers pointing up
on Player B's hand by the number on Player A's hand. The number pointing up on Player A's hand
remains the same.
3. If Player B now has ve ngers up, that hand becomes \dead" or unplayable. If the number of ngers
should exceed ve, subtract ve from the sum.
4. Now Player B touches one hand to one of Player A's hands, and the distribution of ngers proceeds
as above, including the possibility of a \dead" hand.
5. Play repeats steps 2{4 until some player has two \dead" hands, thus losing.

To play the Chopsticks game, the first player
uses one hand to touch one of the second player's
hand and adds fingers based on the total fingers
up on the dealing and receiving hand. A player's
hand is 'dead' only if the fingers up hits exactly
five and the first player to have two 'dead' loses!


doc string examples
fix style coding
